// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grSim_Commands.proto

#include "grSim_Commands.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_zss_5fcmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Robots_Command_zss_5fcmd_2eproto;
class grSim_CommandsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<grSim_Commands> _instance;
} _grSim_Commands_default_instance_;
static void InitDefaultsscc_info_grSim_Commands_grSim_5fCommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_grSim_Commands_default_instance_;
    new (ptr) ::grSim_Commands();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grSim_Commands::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_grSim_Commands_grSim_5fCommands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_grSim_Commands_grSim_5fCommands_2eproto}, {
      &scc_info_Robots_Command_zss_5fcmd_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grSim_5fCommands_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grSim_5fCommands_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grSim_5fCommands_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grSim_5fCommands_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grSim_Commands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grSim_Commands, timestamp_),
  PROTOBUF_FIELD_OFFSET(::grSim_Commands, isteamyellow_),
  PROTOBUF_FIELD_OFFSET(::grSim_Commands, robot_commands_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grSim_Commands)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_grSim_Commands_default_instance_),
};

const char descriptor_table_protodef_grSim_5fCommands_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024grSim_Commands.proto\032\rzss_cmd.proto\"j\n"
  "\016grSim_Commands\022\021\n\ttimestamp\030\001 \001(\001\022\024\n\014is"
  "teamyellow\030\002 \001(\010\022/\n\016robot_commands\030\003 \001(\013"
  "2\027.ZSS.New.Robots_Commandb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grSim_5fCommands_2eproto_deps[1] = {
  &::descriptor_table_zss_5fcmd_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_grSim_5fCommands_2eproto_sccs[1] = {
  &scc_info_grSim_Commands_grSim_5fCommands_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grSim_5fCommands_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grSim_5fCommands_2eproto = {
  false, false, descriptor_table_protodef_grSim_5fCommands_2eproto, "grSim_Commands.proto", 153,
  &descriptor_table_grSim_5fCommands_2eproto_once, descriptor_table_grSim_5fCommands_2eproto_sccs, descriptor_table_grSim_5fCommands_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_grSim_5fCommands_2eproto::offsets,
  file_level_metadata_grSim_5fCommands_2eproto, 1, file_level_enum_descriptors_grSim_5fCommands_2eproto, file_level_service_descriptors_grSim_5fCommands_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_grSim_5fCommands_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_grSim_5fCommands_2eproto)), true);

// ===================================================================

void grSim_Commands::InitAsDefaultInstance() {
  ::_grSim_Commands_default_instance_._instance.get_mutable()->robot_commands_ = const_cast< ::ZSS::New::Robots_Command*>(
      ::ZSS::New::Robots_Command::internal_default_instance());
}
class grSim_Commands::_Internal {
 public:
  static const ::ZSS::New::Robots_Command& robot_commands(const grSim_Commands* msg);
};

const ::ZSS::New::Robots_Command&
grSim_Commands::_Internal::robot_commands(const grSim_Commands* msg) {
  return *msg->robot_commands_;
}
void grSim_Commands::clear_robot_commands() {
  if (GetArena() == nullptr && robot_commands_ != nullptr) {
    delete robot_commands_;
  }
  robot_commands_ = nullptr;
}
grSim_Commands::grSim_Commands(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grSim_Commands)
}
grSim_Commands::grSim_Commands(const grSim_Commands& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_robot_commands()) {
    robot_commands_ = new ::ZSS::New::Robots_Command(*from.robot_commands_);
  } else {
    robot_commands_ = nullptr;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&isteamyellow_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(isteamyellow_));
  // @@protoc_insertion_point(copy_constructor:grSim_Commands)
}

void grSim_Commands::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_grSim_Commands_grSim_5fCommands_2eproto.base);
  ::memset(&robot_commands_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isteamyellow_) -
      reinterpret_cast<char*>(&robot_commands_)) + sizeof(isteamyellow_));
}

grSim_Commands::~grSim_Commands() {
  // @@protoc_insertion_point(destructor:grSim_Commands)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void grSim_Commands::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete robot_commands_;
}

void grSim_Commands::ArenaDtor(void* object) {
  grSim_Commands* _this = reinterpret_cast< grSim_Commands* >(object);
  (void)_this;
}
void grSim_Commands::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void grSim_Commands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const grSim_Commands& grSim_Commands::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_grSim_Commands_grSim_5fCommands_2eproto.base);
  return *internal_default_instance();
}


void grSim_Commands::Clear() {
// @@protoc_insertion_point(message_clear_start:grSim_Commands)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && robot_commands_ != nullptr) {
    delete robot_commands_;
  }
  robot_commands_ = nullptr;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isteamyellow_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(isteamyellow_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* grSim_Commands::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool isteamyellow = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          isteamyellow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ZSS.New.Robots_Command robot_commands = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot_commands(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* grSim_Commands::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grSim_Commands)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (!(this->timestamp() <= 0 && this->timestamp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_timestamp(), target);
  }

  // bool isteamyellow = 2;
  if (this->isteamyellow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_isteamyellow(), target);
  }

  // .ZSS.New.Robots_Command robot_commands = 3;
  if (this->has_robot_commands()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::robot_commands(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_Commands)
  return target;
}

size_t grSim_Commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grSim_Commands)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ZSS.New.Robots_Command robot_commands = 3;
  if (this->has_robot_commands()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_commands_);
  }

  // double timestamp = 1;
  if (!(this->timestamp() <= 0 && this->timestamp() >= 0)) {
    total_size += 1 + 8;
  }

  // bool isteamyellow = 2;
  if (this->isteamyellow() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void grSim_Commands::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grSim_Commands)
  GOOGLE_DCHECK_NE(&from, this);
  const grSim_Commands* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<grSim_Commands>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grSim_Commands)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grSim_Commands)
    MergeFrom(*source);
  }
}

void grSim_Commands::MergeFrom(const grSim_Commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grSim_Commands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_robot_commands()) {
    _internal_mutable_robot_commands()->::ZSS::New::Robots_Command::MergeFrom(from._internal_robot_commands());
  }
  if (!(from.timestamp() <= 0 && from.timestamp() >= 0)) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.isteamyellow() != 0) {
    _internal_set_isteamyellow(from._internal_isteamyellow());
  }
}

void grSim_Commands::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grSim_Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_Commands::CopyFrom(const grSim_Commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grSim_Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_Commands::IsInitialized() const {
  return true;
}

void grSim_Commands::InternalSwap(grSim_Commands* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(grSim_Commands, isteamyellow_)
      + sizeof(grSim_Commands::isteamyellow_)
      - PROTOBUF_FIELD_OFFSET(grSim_Commands, robot_commands_)>(
          reinterpret_cast<char*>(&robot_commands_),
          reinterpret_cast<char*>(&other->robot_commands_));
}

::PROTOBUF_NAMESPACE_ID::Metadata grSim_Commands::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grSim_Commands* Arena::CreateMaybeMessage< ::grSim_Commands >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grSim_Commands >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
