// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grSim_Commands.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grSim_5fCommands_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grSim_5fCommands_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "zss_cmd.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grSim_5fCommands_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grSim_5fCommands_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grSim_5fCommands_2eproto;
class grSim_Commands;
class grSim_CommandsDefaultTypeInternal;
extern grSim_CommandsDefaultTypeInternal _grSim_Commands_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::grSim_Commands* Arena::CreateMaybeMessage<::grSim_Commands>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class grSim_Commands PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grSim_Commands) */ {
 public:
  inline grSim_Commands() : grSim_Commands(nullptr) {};
  virtual ~grSim_Commands();

  grSim_Commands(const grSim_Commands& from);
  grSim_Commands(grSim_Commands&& from) noexcept
    : grSim_Commands() {
    *this = ::std::move(from);
  }

  inline grSim_Commands& operator=(const grSim_Commands& from) {
    CopyFrom(from);
    return *this;
  }
  inline grSim_Commands& operator=(grSim_Commands&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const grSim_Commands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const grSim_Commands* internal_default_instance() {
    return reinterpret_cast<const grSim_Commands*>(
               &_grSim_Commands_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(grSim_Commands& a, grSim_Commands& b) {
    a.Swap(&b);
  }
  inline void Swap(grSim_Commands* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(grSim_Commands* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline grSim_Commands* New() const final {
    return CreateMaybeMessage<grSim_Commands>(nullptr);
  }

  grSim_Commands* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<grSim_Commands>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const grSim_Commands& from);
  void MergeFrom(const grSim_Commands& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(grSim_Commands* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grSim_Commands";
  }
  protected:
  explicit grSim_Commands(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_grSim_5fCommands_2eproto);
    return ::descriptor_table_grSim_5fCommands_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRobotCommandsFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kIsteamyellowFieldNumber = 2,
  };
  // .ZSS.New.Robots_Command robot_commands = 3;
  bool has_robot_commands() const;
  private:
  bool _internal_has_robot_commands() const;
  public:
  void clear_robot_commands();
  const ::ZSS::New::Robots_Command& robot_commands() const;
  ::ZSS::New::Robots_Command* release_robot_commands();
  ::ZSS::New::Robots_Command* mutable_robot_commands();
  void set_allocated_robot_commands(::ZSS::New::Robots_Command* robot_commands);
  private:
  const ::ZSS::New::Robots_Command& _internal_robot_commands() const;
  ::ZSS::New::Robots_Command* _internal_mutable_robot_commands();
  public:
  void unsafe_arena_set_allocated_robot_commands(
      ::ZSS::New::Robots_Command* robot_commands);
  ::ZSS::New::Robots_Command* unsafe_arena_release_robot_commands();

  // double timestamp = 1;
  void clear_timestamp();
  double timestamp() const;
  void set_timestamp(double value);
  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);
  public:

  // bool isteamyellow = 2;
  void clear_isteamyellow();
  bool isteamyellow() const;
  void set_isteamyellow(bool value);
  private:
  bool _internal_isteamyellow() const;
  void _internal_set_isteamyellow(bool value);
  public:

  // @@protoc_insertion_point(class_scope:grSim_Commands)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::ZSS::New::Robots_Command* robot_commands_;
  double timestamp_;
  bool isteamyellow_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grSim_5fCommands_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// grSim_Commands

// double timestamp = 1;
inline void grSim_Commands::clear_timestamp() {
  timestamp_ = 0;
}
inline double grSim_Commands::_internal_timestamp() const {
  return timestamp_;
}
inline double grSim_Commands::timestamp() const {
  // @@protoc_insertion_point(field_get:grSim_Commands.timestamp)
  return _internal_timestamp();
}
inline void grSim_Commands::_internal_set_timestamp(double value) {
  
  timestamp_ = value;
}
inline void grSim_Commands::set_timestamp(double value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:grSim_Commands.timestamp)
}

// bool isteamyellow = 2;
inline void grSim_Commands::clear_isteamyellow() {
  isteamyellow_ = false;
}
inline bool grSim_Commands::_internal_isteamyellow() const {
  return isteamyellow_;
}
inline bool grSim_Commands::isteamyellow() const {
  // @@protoc_insertion_point(field_get:grSim_Commands.isteamyellow)
  return _internal_isteamyellow();
}
inline void grSim_Commands::_internal_set_isteamyellow(bool value) {
  
  isteamyellow_ = value;
}
inline void grSim_Commands::set_isteamyellow(bool value) {
  _internal_set_isteamyellow(value);
  // @@protoc_insertion_point(field_set:grSim_Commands.isteamyellow)
}

// .ZSS.New.Robots_Command robot_commands = 3;
inline bool grSim_Commands::_internal_has_robot_commands() const {
  return this != internal_default_instance() && robot_commands_ != nullptr;
}
inline bool grSim_Commands::has_robot_commands() const {
  return _internal_has_robot_commands();
}
inline const ::ZSS::New::Robots_Command& grSim_Commands::_internal_robot_commands() const {
  const ::ZSS::New::Robots_Command* p = robot_commands_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ZSS::New::Robots_Command*>(
      &::ZSS::New::_Robots_Command_default_instance_);
}
inline const ::ZSS::New::Robots_Command& grSim_Commands::robot_commands() const {
  // @@protoc_insertion_point(field_get:grSim_Commands.robot_commands)
  return _internal_robot_commands();
}
inline void grSim_Commands::unsafe_arena_set_allocated_robot_commands(
    ::ZSS::New::Robots_Command* robot_commands) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(robot_commands_);
  }
  robot_commands_ = robot_commands;
  if (robot_commands) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grSim_Commands.robot_commands)
}
inline ::ZSS::New::Robots_Command* grSim_Commands::release_robot_commands() {
  auto temp = unsafe_arena_release_robot_commands();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ZSS::New::Robots_Command* grSim_Commands::unsafe_arena_release_robot_commands() {
  // @@protoc_insertion_point(field_release:grSim_Commands.robot_commands)
  
  ::ZSS::New::Robots_Command* temp = robot_commands_;
  robot_commands_ = nullptr;
  return temp;
}
inline ::ZSS::New::Robots_Command* grSim_Commands::_internal_mutable_robot_commands() {
  
  if (robot_commands_ == nullptr) {
    auto* p = CreateMaybeMessage<::ZSS::New::Robots_Command>(GetArena());
    robot_commands_ = p;
  }
  return robot_commands_;
}
inline ::ZSS::New::Robots_Command* grSim_Commands::mutable_robot_commands() {
  // @@protoc_insertion_point(field_mutable:grSim_Commands.robot_commands)
  return _internal_mutable_robot_commands();
}
inline void grSim_Commands::set_allocated_robot_commands(::ZSS::New::Robots_Command* robot_commands) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(robot_commands_);
  }
  if (robot_commands) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(robot_commands)->GetArena();
    if (message_arena != submessage_arena) {
      robot_commands = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, robot_commands, submessage_arena);
    }
    
  } else {
    
  }
  robot_commands_ = robot_commands;
  // @@protoc_insertion_point(field_set_allocated:grSim_Commands.robot_commands)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grSim_5fCommands_2eproto
